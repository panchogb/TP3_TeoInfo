import metodos
import math

def GuardarTabla():
    lista = [['a', 0.0963855421686747, '111'], [' ', 0.1530120481927711, '110'], ['i', 0.056626506024096385, '1011'],
             ['e', 0.0783132530120482, '1010'], ['l', 0.05120481927710843, '1001'], ['n', 0.05060240963855422, '1000'],
             ['o', 0.05240963855421687, '01111'], ['s', 0.0391566265060241, '01101'], ['r', 0.04879518072289157, '01100'],
             ['c', 0.03493975903614458, '01011'], ['d', 0.035542168674698796, '01010'], ['p', 0.030120481927710843, '01001'],
             ['t', 0.025903614457831327, '00111'], ['u', 0.03493975903614458, '00110'],
             ['b', 0.01325301204819277, '0010111'], ['m', 0.013855421686746987, '0010101'],
             ['g', 0.009036144578313253, '0010011'],
             ['1', 0.012048192771084338, '0010001'], ['9', 0.00783132530120482, '0010000'],
             ['8', 0.007228915662650603, '0001111'], ['q', 0.00783132530120482, '0001110'],
             ['3', 0.006626506024096385, '00011011'], ['E', 0.006024096385542169, '00011001'],
             [')', 0.005421686746987952, '00011000'], ['(', 0.005421686746987952, '00010111'],
             ['v', 0.004819277108433735, '00010100'],
             ['f', 0.004216867469879518, '00010011'], ['I', 0.004216867469879518, '00010010'],
             ['R', 0.004216867469879518, '00010001'],
             ['.', 0.004216867469879518, '00001110'], ['-', 0.004216867469879518, '00001101'],
             ['y', 0.0036144578313253013, '00001100'], ['C', 0.0030120481927710845, '000010111'],
             ['7', 0.0030120481927710845, '000010110'], [',', 0.0030120481927710845, '000010101'], 
             ['P', 0.0036144578313253013, '00001000'],
            ['6', 0.0024096385542168677, '000001111'], ['x', 0.0024096385542168677, '000001110'],
            ['h', 0.0024096385542168677, '000001101'], ['L', 0.0024096385542168677, '000001011'],
            ['D', 0.0018072289156626507, '000001010'], ['T', 0.0018072289156626507, '000001001'],
            ['j', 0.0018072289156626507, '000001000'],
            ['2', 0.0012048192771084338, '000000110'], ['F', 0.0012048192771084338, '0000001011'],
            ['4', 0.0012048192771084338, '0000001010'], ['S', 0.0012048192771084338, '0000001001'],
            ['\n', 0.0012048192771084338, '0000000111'], ['5', 0.0012048192771084338, '0000000110'],
            ['0', 0.0006024096385542169, '0000000100'],
            ['z', 0.0006024096385542169, '00000000111'], [':', 0.0006024096385542169, '00000000110'],
            ['O', 0.0006024096385542169, '00000000101'], ['J', 0.0006024096385542169, '0000000001'],
            ['A', 0.0006024096385542169, '0000000000']]
    #lista = [[' ', '111'],[',', '000111000000'],['L', '1111111111111']]

    with open('datos_binarios.bin', 'wb') as archivo_binario:
        print(len(lista))

        archivo_binario.write(metodos.IntToBinary(len(lista)))

        for l in lista:

            archivo_binario.write(metodos.ChrToBinary(l[0]))
            tam = len(l[2])
            archivo_binario.write(metodos.IntToBinary(tam))
            
            codigo = l[2]
            while (tam > 8):
                cadena = metodos.StringToBinary(codigo[:8])
                archivo_binario.write(cadena)
                codigo = codigo[8:]
                tam = len(codigo)

            if (tam < 8):
                codigo = metodos.StringToBinary(codigo + "0" * (8 - tam))
            else:
                codigo = metodos.StringToBinary(codigo)
            archivo_binario.write(codigo)

    archivo_binario.close()

def CargarTabla():
    lista = []

    with open('datos_binarios.bin', 'rb') as archivo_binario:

        byte = archivo_binario.read(1)
        tam = metodos.BinaryToInt(byte)
        j = 0
        print(tam)

        while (byte and j < tam):
            byte = archivo_binario.read(1)
            caracter = metodos.BinaryToChr(byte)

            byte = archivo_binario.read(1)
            long = metodos.BinaryToInt(byte)
            cant = math.ceil(long / 8)
            codigo = ''
            for i in range(cant):
                byte = archivo_binario.read(1)
                codigo = codigo + metodos.BinaryToString(byte)
            codigo = codigo[0:long]

            lista.append([caracter, codigo])
            j += 1

    archivo_binario.close()
    return lista

GuardarTabla()
CargarTabla()